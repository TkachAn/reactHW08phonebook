{"version":3,"file":"static/js/30.84a0cccf.chunk.js","mappings":"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","sources":["components/contactForm/form.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://reactHW08phonebook/./src/components/contactList/list.module.css?0aa6","components/contactList/item.jsx","components/contactList/list.jsx","webpack://reactHW08phonebook/./src/components/filter/filter.module.css?56b3","components/filter/filter.jsx","pages/contacts.jsx"],"sourcesContent":["import { addContact } from '../../redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n// import Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nconst theme = createTheme();\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n\n  /** */\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.phone.value;\n\n    form.reset();\n    const data = {\n      name,\n      number,\n    };\n    // console.log('data', data);\n    dispatch(addContact(data));\n  };\n  /** */\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"given-name\"\n                    name=\"name\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    autoFocus\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"phone\"\n                    label=\"Phone number\"\n                    name=\"phone\"\n                    autoComplete=\"phone\"\n                  />\n                </Grid>\n                <Grid item xs={12}></Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Add contacts\n              </Button>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n      {/* <form className={css.form} onSubmit={handleSubmit}>\n        <div className={css.data}>\n          <label className={css.label}>\n            Name\n            <input\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"enter your name, please.\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label className={css.label}>\n            Phone number\n            <input\n              className={css.input}\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"enter your phone number, please.\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n        </div>\n\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form> */}\n    </>\n  );\n}\n// maxWidth=\"xs\"\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts;\n// export const selectContacts = state => state.items;\nexport const selectSearch = state => state.searchValue;\n\nexport const filteredContacts = createSelector(\n  [selectContacts, selectSearch],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n// const getVisibleContacts = createSelector(\n//   [getAllContacts, getFilter],\n//   (contacts, filter) => {\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(({ name }) =>\n//       name.toLowerCase().includes(normalizedFilter)\n//     );\n//   }\n// );\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"list_list__iVhyT\",\"item\":\"list_item__u5pFK\",\"info\":\"list_info__kmHlF\",\"btn\":\"list_btn__mF4nT\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { delContact } from 'redux/contacts/operations';\nimport css from './list.module.css';\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const delContacts = () => dispatch(delContact(id));\n\n  return (\n    <li className={css.item} key={id}>\n      <div className={css.info}>\n        {name}: {number}\n        <button\n          className={css.btn}\n          type=\"button\"\n          onClick={() => delContacts(id)}\n        >\n          X\n        </button>\n      </div>\n    </li>\n  );\n};\n\nContactItem.propType = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectSearch, selectContacts } from '../../redux/contacts/selectors';\nimport { ContactItem } from './item';\n\n// const selectContacts = state => state.items;\n// const selectSearch = state => state.searchValue;\n\nexport const ContactList = () => {\n  const filter = useSelector(selectSearch);\n  const { contacts } = useSelector(selectContacts);\n  // console.log('selectContacts', useSelector(selectContacts));\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.searchValue.toLowerCase())\n  );\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => {\n          return <ContactItem id={id} name={name} number={number} key={id} />;\n        })}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__2yB5Q\",\"input\":\"filter_input__5Xngh\"};","import { useDispatch } from 'react-redux';\nimport { setSearchValue } from 'redux/contacts/searchSlice';\nimport css from './filter.module.css';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleSearch = e => {\n    dispatch(setSearchValue(e.currentTarget.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input className={css.input} type=\"text\" onChange={handleSearch} />\n    </label>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../components/contactForm/form';\nimport { ContactList } from '../components/contactList/list';\nimport { Filter } from '../components/filter/filter';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\n// import css from '../components/App.module.css';\nimport { Helmet } from 'react-helmet';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nconst theme = createTheme({\n  typography: {\n    h4: {\n      color: '#1976d2',\n      fontWeight: '700',\n      textAlign: 'center',\n    },\n    // Disable h3 variant\n    // h1: undefined,\n  },\n});\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  const { contacts, isLoading } = useSelector(selectContacts);\n  // console.log({ contacts, isLoading });\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <main>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n        <Typography component=\"h1\" variant=\"h4\">\n          Phonebook\n        </Typography>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {Number(contacts.length) > 1 && <Filter />}\n\n        {isLoading && <p>Loading contacts...</p>}\n        {contacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <p>Your phonebook is empty. Please add contact.</p>\n        )}\n      </main>\n    </ThemeProvider>\n  );\n}\n//contacts={contacts}\n// export default ContactsPage;\n// className={css.container}\n"],"names":["theme","createTheme","ContactForm","dispatch","useDispatch","ThemeProvider","Container","component","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","noValidate","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","phone","reset","data","addContact","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","Button","type","variant","mb","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectSearch","searchValue","filter","normalizedFilter","toLowerCase","includes","ContactItem","className","css","onClick","delContact","propType","PropTypes","ContactList","useSelector","filteredContacts","contact","Filter","onChange","setSearchValue","typography","h4","color","fontWeight","textAlign","ContactsPage","isLoading","useEffect","fetchContacts","Helmet","Typography","Number"],"sourceRoot":""}